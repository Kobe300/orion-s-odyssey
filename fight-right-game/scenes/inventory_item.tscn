[gd_scene load_steps=5 format=3 uid="uid://csq10ikwbkpg8"]

[ext_resource type="Texture2D" uid="uid://birh6rw7bf012" path="res://icon.svg" id="2_f7kv3"]
[ext_resource type="Texture2D" uid="uid://0iw436t6slfw" path="res://assets/items/item3.png" id="2_rhmm0"]

[sub_resource type="GDScript" id="GDScript_gmwi8"]
script/source = "@tool
extends Node2D

@export var item_type = \"\"
@export var item_name = \"\"
@export var item_effect = \"\"
@export var item_texture = Texture

var scene_path: String = \"res://scenes/inventory_item.tscn\"

@onready var icon_sprite = $Sprite2D

var player_in_range = false

# Called when the node enters the scene tree for the first time.
func _ready():
	if not Engine.is_editor_hint():
		icon_sprite.texture = item_texture


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(_delta):
	if not Engine.is_editor_hint():
		icon_sprite.texture = item_texture
	
	if player_in_range and Input.is_action_just_pressed(\"Interact\"):
		pickup_item()

func pickup_item():
	var item = {
		\"quantity\": 1,
		\"type\": item_type,
		\"name\": item_name,
		\"effect\": item_effect,
		\"texture\": item_texture,
		\"path\": scene_path
	}
	
	
	if GlobalInv.player_node:
		GlobalInv.add_item(item)
		self.queue_free()


func _on_area_2d_body_entered(body):
	if body.is_in_group(\"Player\"):
		player_in_range = true
		print(player_in_range)


func _on_area_2d_body_exited(body):
	if body.is_in_group(\"Player\"):
		player_in_range = false
		print(player_in_range)

func set_item_data(data):
	item_type = data[\"type\"]
	item_name = data[\"name\"]
	item_effect = data[\"effect\"]
	item_texture = data[\"texture\"]
"

[sub_resource type="CircleShape2D" id="CircleShape2D_dcfh1"]

[node name="Inventory_Item" type="Node2D" groups=["Items"]]
script = SubResource("GDScript_gmwi8")
item_type = "place_holder"
item_name = "godoer"
item_effect = "heal"
item_texture = ExtResource("2_f7kv3")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("2_rhmm0")

[node name="Area2D" type="Area2D" parent="."]
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource("CircleShape2D_dcfh1")

[connection signal="body_entered" from="Area2D" to="." method="_on_area_2d_body_entered"]
[connection signal="body_exited" from="Area2D" to="." method="_on_area_2d_body_exited"]
